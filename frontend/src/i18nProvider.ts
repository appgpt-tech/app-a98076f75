//Source code generated by AppGPT (www.appgpt.tech)
import { mergeTranslations } from 'ra-core';
import polyglotI18nProvider from 'ra-i18n-polyglot';
import enOriginal from 'ra-language-english';
import frOriginal from 'ra-language-french';

const enResources = {
  resources: {
    Users: {
      name: 'Users',
      fields: {
        email: 'Email',
        phoneNumber: 'Phone Number',
        subscriptionStatus: 'Subscription Status',
        registrationDate: 'Registration Date',
        password: 'Password',
        id: 'id',
      },
    },
    Transactions: {
      name: 'Transactions',
      fields: {
        amount: 'Amount',
        sender: 'Sender',
        receiver: 'Receiver',
        transactionDate: 'Transaction Date',
        paymentMethod: 'Payment Method',
        id: 'id',
      },
    },
    PaymentMethods: {
      name: 'Payment Methods',
      fields: {
        methodName: 'Method Name',
        accountDetails: 'Account Details',
        id: 'id',
      },
    },
  },
};
const frResources = {
  resources: {
    Users: {
      name: 'Users (fr)',
      fields: {
        email: 'Email (fr)',
        phoneNumber: 'Phone Number (fr)',
        subscriptionStatus: 'Subscription Status (fr)',
        registrationDate: 'Registration Date (fr)',
        password: 'Password (fr)',
        id: 'id',
      },
    },
    Transactions: {
      name: 'Transactions (fr)',
      fields: {
        amount: 'Amount (fr)',
        sender: 'Sender (fr)',
        receiver: 'Receiver (fr)',
        transactionDate: 'Transaction Date (fr)',
        paymentMethod: 'Payment Method (fr)',
        id: 'id',
      },
    },
    PaymentMethods: {
      name: 'Payment Methods (fr)',
      fields: {
        methodName: 'Method Name (fr)',
        accountDetails: 'Account Details (fr)',
        id: 'id',
      },
    },
  },
};

const en = mergeTranslations(enOriginal, enResources);
const fr = mergeTranslations(frOriginal, frResources);

const translations = { en, fr };
export const i18nProvider = polyglotI18nProvider(
  (locale) => translations[locale],
  'en', //default locale
  [
    { locale: 'en', name: 'English' },
    { locale: 'fr', name: 'Fran√ßais' },
  ],
);
